package main

import (
	"gorm.io/driver/sqlite"
	"gorm.io/gorm"
)

type Product struct {
	gorm.Model
	// ID        uint `gorm:"primarykey"`
	// CreatedAt time.Time
	// UpdatedAt time.Time
	// DeletedAt DeletedAt `gorm:"index"`
	Code  string
	Price uint
}

func main() {
	db, err := gorm.Open(sqlite.Open("test.db"), &gorm.Config{})
	if err != nil {
		panic("failed to connect database")
	}
	//gorm.open(
	// "ユーザー名:パスワード@tcp(ホスト:ポート)/データベース名?パラメータ"
	// )

	//func Open(dsn string) gorm.Dialector {
	// return &Dialector{DSN: dsn}
	// }

	// Migrate the schema
	db.AutoMigrate(&Product{})

	// Create
	db.Create(&Product{Code: "D42", Price: 100})

	// Read
	var product Product
	db.First(&product, 1)                 // find product with integer primary key
	db.First(&product, "code = ?", "D42") // find product with code D42

	// Update - update product's price to 200
	db.Model(&product).Update("Price", 200)
	// Update - update multiple fields
	db.Model(&product).Updates(Product{Price: 200, Code: "F42"}) // non-zero fields
	db.Model(&product).Updates(map[string]interface{}{"Price": 200, "Code": "F42"})

	// Delete - delete product
	db.Delete(&product, 1)
}

// -------------------------
// package main

// //参考　https://www.yoheim.net/blog.php?q=20170403

// import (
// 	"log"
// 	"net/http"
// )

// //importするときは”ディレクトリ".関数名
// //ファイル名じゃないから注意

// func main() {
// 	// http.HandleFunc("/secret", utility.Oimo)
// 	// http.HandleFunc("/", handler)
// 	http.HandleFunc("/", article.Index)
// 	http.HandleFunc("/show", article.Show)
// 	http.HandleFunc("/create", article.Create)
// 	// http.HandleFunc("/edit", article.Edit)
// 	// http.HandleFunc("/delete", article.Delete)

// 	if err := http.ListenAndServe(":8080", nil); err != nil {
// 		log.Fatal("ListenAndServe:", err)
// 	}
// }

// //fmt.Fprint()の第２引数はstring型である必要があり、引用元の関数を
// // func Oimo() stringとする
